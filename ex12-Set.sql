/*
파일명 : ex12-Set.sql

집합 연산자
    여러 테이블 또는 집합의 결과를 조합하고 조작하는 연산자.
    SELECT 리스트의 표현식은 컬럼 개수가 일치해야 합니다.
    데이터 유형도 일치해야 합니다.
    
    UNION, UNION ALL, INTERSECT, MINUS
*/

-- UNION 연산자 : 두 개의 쿼리 결과를 합치고, 중복된 행을 제거합니다.
SELECT EMPLOYEE_ID, JOB_ID
FROM EMPLOYEES
UNION
SELECT EMPLOYEE_ID, JOB_ID
FROM JOB_HISTORY;

-- UNION ALL 연산자 : 두 개의 쿼리 결과를 합치고, 중복된 행을 포함하여 모두 반환합니다.
SELECT EMPLOYEE_ID, JOB_ID
FROM EMPLOYEES
UNION ALL
SELECT EMPLOYEE_ID, JOB_ID
FROM JOB_HISTORY
ORDER BY EMPLOYEE_ID;

-- INTERSECT 연산자 : 두 개의 쿼리 결과 중에서 공통된 행만 반환합니다.
SELECT EMPLOYEE_ID, JOB_ID
FROM EMPLOYEES
INTERSECT
SELECT EMPLOYEE_ID, JOB_ID
FROM JOB_HISTORY;

-- MINUS 연산자 : 첫 번째 쿼리 결과 중에서 두 번째 쿼리 결과에 존재하지 않는 행만 반한합니다.
SELECT EMPLOYEE_ID, JOB_ID
FROM EMPLOYEES
MINUS
SELECT EMPLOYEE_ID, JOB_ID
FROM JOB_HISTORY;

-- !> 데이터 유형 일치시켜야 합니다.
-- 조인하지 않은 두 테이블의 특정 컬럼들을 UNION하여 가져오기
SELECT LOCATION_ID, DEPARTMENT_NAME AS "Department", TO_CHAR(NULL) "Warehouse location"
FROM DEPARTMENTS
UNION
SELECT LOCATION_ID, TO_CHAR(NULL) AS "Department", STATE_PROVINCE
FROM LOCATIONS;

SELECT EMPLOYEE_ID, JOB_ID, SALARY
FROM EMPLOYEES
UNION
SELECT EMPLOYEE_ID, JOB_ID, 0
FROM JOB_HISTORY;